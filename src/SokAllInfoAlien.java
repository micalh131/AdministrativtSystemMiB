import java.util.ArrayList;
import java.util.HashMap;
import javax.swing.JOptionPane;
import oru.inf.InfDB;
import oru.inf.InfException;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author carolinaappel
 */
public class SokAllInfoAlien extends javax.swing.JFrame {
    private InfDB idb;

    /**
     * Creates new form SokAllInfoAgent
     */
    public SokAllInfoAlien(InfDB idb) {
        initComponents();
        this.idb = idb;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtSokAlien = new javax.swing.JTextField();
        lblSokAlien = new javax.swing.JLabel();
        btnSok = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtaAlienInfo = new javax.swing.JTextArea();

        txtSokAlien.setColumns(4);

        lblSokAlien.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        lblSokAlien.setText("Sök all info om Alien");

        btnSok.setText("Sök");
        btnSok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSokActionPerformed(evt);
            }
        });

        txtaAlienInfo.setColumns(20);
        txtaAlienInfo.setRows(5);
        jScrollPane1.setViewportView(txtaAlienInfo);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblSokAlien)
                        .addGap(75, 75, 75)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnSok, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtSokAlien))))
                .addContainerGap(45, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSokAlien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblSokAlien))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnSok)
                .addGap(31, 31, 31)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(53, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSokActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSokActionPerformed
        txtaAlienInfo.setText("");
        String soktNamn = txtSokAlien.getText();
        boolean inmatningOk = Validering.textFaltEjTomtRegEx(soktNamn);
        if (!inmatningOk) {
            txtSokAlien.requestFocus();
        }
        
        ArrayList<HashMap<String, String>> soktaNamn;

        try {
            String fraga = "SELECT * FROM Alien WHERE alien.Namn= '" + soktNamn + "'";
            soktaNamn = idb.fetchRows(fraga);
            txtaAlienInfo.append("AlienID" + "\t" + "Registrerad" + "\t" + "Losenord" + "\t"
                    + "Namn" + "\t" + "Telefon" + "\t" + "Plats" + "\t" + "Ansvarig_Agent" + "\n");
            for (HashMap<String, String> ettNamn : soktaNamn) {
                txtaAlienInfo.append(ettNamn.get("Alien_ID") + "\t" + ettNamn.get("Registreringsdatum") + "\t" + ettNamn.get("Losenord") + "\t" + ettNamn.get("Namn") + "\t" + ettNamn.get("Telefon") + "\t" + ettNamn.get("Plats") + "\t" + ettNamn.get("Ansvarig Agent"));
            }
        }
        catch (InfException e) {
            JOptionPane.showMessageDialog(null, "Något gick fel");
        }
    }//GEN-LAST:event_btnSokActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSok;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblSokAlien;
    private javax.swing.JTextField txtSokAlien;
    private javax.swing.JTextArea txtaAlienInfo;
    // End of variables declaration//GEN-END:variables
}
